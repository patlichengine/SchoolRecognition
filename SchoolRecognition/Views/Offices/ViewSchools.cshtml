@model PagedList<SchoolsViewDto>
@{

    var office = (OfficesViewPagedListSchoolsDto)ViewBag.Office;
    var pages = (IEnumerable<int>)ViewBag.Pages;
}
<div class="row mb-2">
    <div class="col-12">
        <h5 class="mt-3" style="font-weight: 100">Schools Managed:</h5>
    </div>
    <div class="col-12 mt-3">

        <form asp-action="ViewSchools" asp-controller="Offices" asp-route-id="@office.Id" method="get" class="md-form mb-3" id="searchForm">

            <div class="input-group">
                <input type="text" min-length="2" name="searchQuery" class="form-control" value="@ViewBag.SearchQuery" placeholder="Enter Search words..." aria-label="Username" aria-describedby="material-addon1">
                @*<div class="input-group-prepend">
                        <span class="input-group-text md-addon" id="material-addon1">
                            <i class="fas fa-search"></i>
                        </span>
                    </div>*@
                <div class="input-group-prepend">
                    <button class="btn btn-md btn-light" type="submit">
                        <i class="fas fa-search"></i>
                        Search
                    </button>
                </div>
            </div>



        </form>

    </div>

    <div class="col-md-12 mb-1">





        <a href="@Url.Action("Details", "Offices", new { id  = office.Id , orderBy = "school_name", searchQuery = ViewBag.SearchQuery, pageNumber = Model.CurrentPage, data_toggle = "link" })" class="btn btn-light btn-xs">
            Name Ascending
            <i class="fas fa-sort-up"></i>
        </a>
        <a href="@Url.Action("Details", "Offices", new { id  = office.Id ,  orderBy = "school_name_desc", searchQuery = ViewBag.SearchQuery, pageNumber = Model.CurrentPage, data_toggle = "link" })" class="btn btn-light btn-xs">
            Name Descending
            <i class="fas fa-sort-down"></i>
        </a>
        <a href="@Url.Action("Details", "Offices", new { id  = office.Id , orderBy = "year", searchQuery = ViewBag.SearchQuery, pageNumber = Model.CurrentPage, data_toggle = "link" })" class="btn btn-light btn-xs">
            Year Established Ascending
            <i class="fas fa-sort-up"></i>
        </a>
        <a href="@Url.Action("Details", "Offices", new { id  = office.Id ,  orderBy = "year_desc", searchQuery = ViewBag.SearchQuery, pageNumber = Model.CurrentPage, data_toggle = "link" })" class="btn btn-light btn-xs">
            Year Established Descending
            <i class="fas fa-sort-down"></i>
        </a>

    </div>
</div>

<table class="table table-bordered table-striped" role="grid" aria-describedby="example1_info">

    <thead>
        <tr role="row">
            <td>Name of School</td>
            <td>Category</td>
            <td>LGA</td>
            <td>Year Est.</td>
            @*<td>Address</td>*@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr role="row">
                <td>@(!String.IsNullOrWhiteSpace(item.SchoolName) ? item.SchoolName : "NOT STATED")</td>
                <td>@(!String.IsNullOrWhiteSpace(item.SchoolCategoryName) ? item.SchoolCategoryName : "NOT STATED")</td>
                <td>@(!String.IsNullOrWhiteSpace(item.LgaName) ? item.LgaName : "NOT STATED")</td>
                <td>@item.YearEstablished</td>
                @*<td>@(!String.IsNullOrWhiteSpace(item.Address) ? item.Address : "NOT STATED")</td>*@
                <td class="text-center p-1">
                    @*<a asp-action="Details" asp-route-id="@item.Id" class="btn btn-light btn-sm " data-toggle="tooltip" data-placement="top" title="View Offices">
                            <i class="fas fa-desktop"></i>
                            View Offices
                        </a>*@
                </td>
            </tr>
        }
        @if (Model.TotalCount < 1)
        {
            <tr>
                <td class="text-center" colspan="5">
                    No data available in table
                </td>
            </tr>
        }

    </tbody>
</table>


@{
    var prevDisabled = Model.HasPrevious ? "" : "disabled";
    var nextDisabled = Model.HasNext ? "" : "disabled";
    //var disableAll =
}
@if (Model.TotalCount > 0)
{
    int range = Model.PageSize > Model.TotalCount ? Model.TotalCount : Model.PageSize;
    <div class="row mt-2">
        <div class="col">
            @String.Format("Showing {0} to {1} of {2} ", (((Model.CurrentPage - 1) * range) + 1), (Model.CurrentPage * range), Model.TotalCount)
        </div>
        <div class="col-8">


            <partial name="_paginationLinks" model='new PaginationLinksDto {
                                 Pages = pages, PageNumber = Model.CurrentPage, PrevDisabled = prevDisabled,
                                 NextDisabled = nextDisabled, Controller = "Offices", Action = "ViewSchools", Id = office.Id, CurrentPage = Model.CurrentPage,
                                 TotalPages = Model.TotalPages }'>

        </div>
    </div>
}



<script src="~/js/ajaxTabFormGET.js"></script>
<script src="~/js/linkClick.js"></script>