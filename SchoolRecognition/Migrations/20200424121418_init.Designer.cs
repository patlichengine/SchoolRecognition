// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolRecognition.Models;

namespace SchoolRecognition.Migrations
{
    [DbContext(typeof(SchoolRecognitionContext))]
    [Migration("20200424121418_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolRecognition.Entities.AuditTrail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<Guid>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AuditTrail");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Centres", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<byte[]>("CentreImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CentreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CentreNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<Guid?>("SchoolCategoryId")
                        .HasColumnName("SchoolCategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CentreNo")
                        .IsUnique()
                        .HasName("IX_Centres");

                    b.HasIndex("SchoolCategoryId");

                    b.ToTable("Centres");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Dblogger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ErrorMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DBLogger");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.LocalGovernments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("StateId")
                        .HasColumnName("StateID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("LocalGovernments");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.LocationTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LocationTypes");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.OfficeTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("OfficeTypes");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Offices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitute")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("OfficeImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("OfficeTypeId")
                        .HasColumnName("OfficeTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StateId")
                        .HasColumnName("StateID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OfficeTypeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.PinHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateActive")
                        .HasColumnType("date");

                    b.Property<Guid?>("PinId")
                        .HasColumnName("PinID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnName("SchoolID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PinId");

                    b.HasIndex("SchoolId");

                    b.ToTable("PinHistories");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Pins", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RecognitionTypeId")
                        .HasColumnName("RecognitionTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialPin")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("RecognitionTypeId");

                    b.ToTable("Pins");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Ranks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.RecognitionTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RecognitionTypes");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.SchoolCategories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SchoolCategories");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.SchoolPayments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<Guid?>("PinId")
                        .HasColumnName("PinID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ReceiptImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("SchoolId")
                        .HasColumnName("SchoolID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PinId");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolPayments");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Schools", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("LgId")
                        .HasColumnName("LgID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("OfficeId")
                        .HasColumnName("OfficeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("YearEstablished")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LgId");

                    b.HasIndex("OfficeId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.SecurityConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ClientAllowedIp")
                        .HasColumnName("ClientAllowedIP")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LocalDataRetentionPeriod")
                        .HasColumnType("int");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SupportedBrowsers")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SupportedClientVersion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SecurityConfig");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.States", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_State")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Titles", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Lpno")
                        .HasColumnName("LPNO")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Othernames")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid?>("RankId")
                        .HasColumnName("RankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Signature")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RankId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Centres", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.SchoolCategories", "SchoolCategory")
                        .WithMany("Centres")
                        .HasForeignKey("SchoolCategoryId")
                        .HasConstraintName("FK_Centres_SchoolCategories");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.LocalGovernments", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.States", "State")
                        .WithMany("LocalGovernments")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_LocalGovernments_State");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Offices", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.OfficeTypes", "OfficeType")
                        .WithMany("Offices")
                        .HasForeignKey("OfficeTypeId")
                        .HasConstraintName("FK_Offices_OfficeTypes");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.PinHistories", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.Pins", "Pin")
                        .WithMany("PinHistories")
                        .HasForeignKey("PinId")
                        .HasConstraintName("FK_PinHistory_PIN");

                    b.HasOne("SchoolRecognition.Entities.Schools", "School")
                        .WithMany("PinHistories")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_PinHistory_School");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Pins", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.Users", "CreatedByNavigation")
                        .WithMany("Pins")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_PIN_User");

                    b.HasOne("SchoolRecognition.Entities.RecognitionTypes", "RecognitionType")
                        .WithMany("Pins")
                        .HasForeignKey("RecognitionTypeId")
                        .HasConstraintName("FK_PIN_RecognitionType");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.SchoolPayments", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.Users", "CreatedByNavigation")
                        .WithMany("SchoolPayments")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_SchoolPayment_User");

                    b.HasOne("SchoolRecognition.Entities.Pins", "Pin")
                        .WithMany("SchoolPayments")
                        .HasForeignKey("PinId")
                        .HasConstraintName("FK_SchoolPayment_PIN");

                    b.HasOne("SchoolRecognition.Entities.Schools", "School")
                        .WithMany("SchoolPayments")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_SchoolPayment_School");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Schools", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.SchoolCategories", "Category")
                        .WithMany("Schools")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_School_SchoolCategory");

                    b.HasOne("SchoolRecognition.Entities.LocalGovernments", "Lg")
                        .WithMany("Schools")
                        .HasForeignKey("LgId")
                        .HasConstraintName("FK_School_LocalGovernment");

                    b.HasOne("SchoolRecognition.Entities.Offices", "Office")
                        .WithMany("Schools")
                        .HasForeignKey("OfficeId")
                        .HasConstraintName("FK_School_Office");
                });

            modelBuilder.Entity("SchoolRecognition.Entities.Users", b =>
                {
                    b.HasOne("SchoolRecognition.Entities.Ranks", "Rank")
                        .WithMany("Users")
                        .HasForeignKey("RankId")
                        .HasConstraintName("FK_User_Rank");

                    b.HasOne("SchoolRecognition.Entities.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role");
                });
#pragma warning restore 612, 618
        }
    }
}
