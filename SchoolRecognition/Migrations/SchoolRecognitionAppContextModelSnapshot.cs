// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolRecognition.Data;

namespace SchoolRecognition.Migrations
{
    [DbContext(typeof(SchoolRecognitionAppContext))]
    partial class SchoolRecognitionAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolRecognition.Models.LocalGovernments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("LocalGovernments");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Offices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("SchoolRecognition.Models.PinHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateActive")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PinId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PinId");

                    b.HasIndex("SchoolId");

                    b.ToTable("PinHistories");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Pins", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedByNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RecognitionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialPin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByNavigationId");

                    b.HasIndex("RecognitionTypeId");

                    b.ToTable("Pins");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Ranks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("SchoolRecognition.Models.RecognitionTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RecognitionTypes");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolRecognition.Models.SchoolCategories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolCategories");
                });

            modelBuilder.Entity("SchoolRecognition.Models.SchoolPayments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedByNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PinId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ReceiptImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByNavigationId");

                    b.HasIndex("PinId");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolPayments");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Schools", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("YearEstablished")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LgId");

                    b.HasIndex("OfficeId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("SchoolRecognition.Models.States", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Lpno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RankId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolRecognition.Models.LocalGovernments", b =>
                {
                    b.HasOne("SchoolRecognition.Models.States", "State")
                        .WithMany("LocalGovernments")
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("SchoolRecognition.Models.PinHistories", b =>
                {
                    b.HasOne("SchoolRecognition.Models.Pins", "Pin")
                        .WithMany("PinHistories")
                        .HasForeignKey("PinId");

                    b.HasOne("SchoolRecognition.Models.Schools", "School")
                        .WithMany("PinHistories")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Pins", b =>
                {
                    b.HasOne("SchoolRecognition.Models.Users", "CreatedByNavigation")
                        .WithMany("Pins")
                        .HasForeignKey("CreatedByNavigationId");

                    b.HasOne("SchoolRecognition.Models.RecognitionTypes", "RecognitionType")
                        .WithMany("Pins")
                        .HasForeignKey("RecognitionTypeId");
                });

            modelBuilder.Entity("SchoolRecognition.Models.SchoolPayments", b =>
                {
                    b.HasOne("SchoolRecognition.Models.Users", "CreatedByNavigation")
                        .WithMany("SchoolPayments")
                        .HasForeignKey("CreatedByNavigationId");

                    b.HasOne("SchoolRecognition.Models.Pins", "Pin")
                        .WithMany("SchoolPayments")
                        .HasForeignKey("PinId");

                    b.HasOne("SchoolRecognition.Models.Schools", "School")
                        .WithMany("SchoolPayments")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Schools", b =>
                {
                    b.HasOne("SchoolRecognition.Models.SchoolCategories", "Category")
                        .WithMany("Schools")
                        .HasForeignKey("CategoryId");

                    b.HasOne("SchoolRecognition.Models.LocalGovernments", "Lg")
                        .WithMany("Schools")
                        .HasForeignKey("LgId");

                    b.HasOne("SchoolRecognition.Models.Offices", "Office")
                        .WithMany("Schools")
                        .HasForeignKey("OfficeId");
                });

            modelBuilder.Entity("SchoolRecognition.Models.Users", b =>
                {
                    b.HasOne("SchoolRecognition.Models.Ranks", "Rank")
                        .WithMany("Users")
                        .HasForeignKey("RankId");

                    b.HasOne("SchoolRecognition.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
